name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend-test:
    name: Frontend Tests & Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Check frontend directory
        run: |
          if [ ! -d "apps/frontend" ]; then
            echo "Frontend directory not found!"
            exit 1
          fi
          ls -la apps/frontend/

      - name: Install dependencies
        run: |
          cd apps/frontend
          pnpm install

      - name: Run linting
        run: |
          cd apps/frontend
          pnpm lint

      - name: Run type checking
        run: |
          cd apps/frontend
          pnpm type-check

      - name: Run format check
        run: |
          cd apps/frontend
          pnpm format:check

      - name: Build application
        run: |
          cd apps/frontend
          pnpm build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL || 'http://localhost:3001' }}

  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    if: false  # Disable until backend is set up
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd apps/backend
          npm install

      - name: Run tests
        run: |
          cd apps/backend
          npm test
        env:
          NODE_ENV: test

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [frontend-test]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/frontend
          vercel-args: '--prod'

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [frontend-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/frontend
          vercel-args: '--prod'
